{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","CreateTodoButton/index.js","LoadingTodo/index.js","Footer/index.js","modal/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deletTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","CreateTodoButton","prevState","LoadingTodo","FooterSection","href","fontSize","Modal","ReactDom","createPortal","document","getElementById","AppUI","Fragment","Array","fill","map","index","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.a020bd5a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useLocalStorage} from './useLocalStorage'\r\n\r\n// este todoContext es un obejto, con propiedades provider y consumer\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n      } = useLocalStorage('TODOS_V1', []);\r\n      const [searchValue, setSearchValue] = React.useState('');\r\n      const [openModal, setOpenModal] = React.useState(false);\r\n\r\n      const completedTodos = todos.filter(todo => !!todo.completed).length; //filtramos los elementos para saber cual tiene la propiedad ompleted = true, tambien contamos cada puesto con .lenght\r\n      const totalTodos = todos.length; // \r\n    \r\n      // creamos un array para no tener que llamar a todo´s cada ves que lo queramos liestar\r\n      let searchedTodos = []; \r\n    \r\n      if (!searchValue.length >= 1) { // si no hay nada escrtio en el input mostraremos todos los todo´s\r\n        searchedTodos = todos;\r\n      } else {\r\n        searchedTodos = todos.filter(todo => {  // \r\n          // llamamos a cada uno de los todos y lo combertimos a minisculas para analizarlos\r\n          const todoText = todo.text.toLowerCase(); // texto dentro de nuestros Todo´s\r\n          const searchText = searchValue.toLowerCase(); // texto escrito en el input\r\n          return todoText.includes(searchText); // .includes => usamos para comparar lo escrito por el usuario y lo guardado\r\n        });\r\n      }\r\n    \r\n      const addTodo = (text) => {\r\n          const newTodos = [...todos]; // creamos un nuevo array con los elementos del original para poner manipularlo\r\n          newTodos.push({\r\n            completed: false,\r\n            text,\r\n          })\r\n          saveTodos(newTodos);\r\n      }\r\n\r\n    \r\n      const completeTodo = (text) => { //cuando llamemos a la funcion le enviaremos un texto, el del todo\r\n        //variale que busca el index con .findIndex()\r\n        const todoIndex = todos.findIndex(todo => todo.text === text); // analisamos uno por uno cual tiene el mismo texto, y cuando lo encontremos obtendremos la posicon dentro del array\r\n        \r\n        const newTodos = [...todos]; // creamos un nuevo array con los elementos del original para poner manipularlo\r\n        newTodos[todoIndex].completed = !newTodos[todoIndex].completed; //\r\n    \r\n        // debemos actualizar nuestro estado\r\n        saveTodos(newTodos);\r\n        \r\n        // todos[todoIndex] = {\r\n        //   text: todos[todoIndex].text,\r\n        //   completed: true,\r\n        // }\r\n      };\r\n    \r\n      const deletTodo = (text) => {\r\n          const todoIndex = todos.findIndex(todo => todo.text === text);\r\n          const newTodos = [...todos];\r\n          //para elimnar usamos el metodo .splice()\r\n          // pasamos dos parametros, primero = posicion inicial | segundo = cantidad a eliminar \r\n          newTodos.splice(todoIndex, 1);  // la posicion inical es el texto de los todos, y el segundo hace referencia a esa posicion\r\n          saveTodos(newTodos); //llmamos a la funcion que guarda nuestros datos en localStorage\r\n      }\r\n    \r\n      // console.log('render (antes de luse)')\r\n      // React.useEffect(() =>{\r\n      //   console.log('use effect');\r\n      //   // al añadir este segundo argunmeto, un array, nos permite definir cuando se ejecutara el useEfect\r\n      // }, [totalTodos]); // al añadir la lista de Todos´s, el use efect esta al pendiente de cualquier cambio dentro de la lista, ejemplo\r\n      //                     // si llegamos a borrar un elemento se activara el use efect\r\n      // console.log('render (luego de luse)')\r\n\r\n\r\n    return(\r\n        // las dobles llaves hace referecnia a in obejto\r\n        <TodoContext.Provider value = {{\r\n              loading,\r\n              error,\r\n              totalTodos,\r\n              completedTodos,\r\n              searchValue,\r\n              addTodo,\r\n              setSearchValue,\r\n              searchedTodos,\r\n              completeTodo,\r\n              deletTodo,\r\n              openModal,\r\n              setOpenModal,\r\n        }}>        \r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n};\r\n\r\nexport { TodoContext, TodoProvider};\r\n\r\n","import React from 'react'\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n\r\n    //Lo inicio como un objeto con ambos estados, error y false\r\n    //   const [dataStatus,setDataStatus] = useState({loading:true,error:false})\r\n    \r\n    // y lo edito de esta forma, para evitar la sobreescritura.\r\n    //Para editar solo el loading\r\n    //  setDataStatus({...dataStatus,loading:false})\r\n    //Para editar solo el error\r\n    // setDataStatus({...dataStatus,error:true})\r\n    //Para editar ambos  ヽ(•‿•)ノ\r\n    //  setDataStatus({loading:false,error:false})\r\n    \r\n      const [error, setError] = React.useState(false);\r\n      const [loading, setLoading] = React.useState(true);\r\n    \r\n      const [item, setItem] = React.useState(initialValue); // nuestro estado inicial\r\n    \r\n      React.useEffect(() => {\r\n          setTimeout(() => {\r\n            try{\r\n                // localStorage => una base local del navegador que permite guarda datos pero solo en tipo string\r\n              const localStorageItem = localStorage.getItem(itemName); // obtenemos el primer elmento de local storage\r\n              let parsedItem;\r\n                \r\n              if (!localStorageItem){ // !localStorage => si no existe nada\r\n                localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n                parsedItem = initialValue;\r\n              }else{ \r\n                // en caso de que ya alla algo en local storage\r\n                parsedItem = JSON.parse(localStorageItem) // transformamos el string guardado en local storage en un json\r\n              }\r\n    \r\n              setItem(parsedItem);\r\n              setLoading(false);\r\n          \r\n          } catch{\r\n              setError(error)\r\n            }\r\n        }, 1000)\r\n      });\r\n    \r\n        const saveItem = (newItem) => {\r\n          try{\r\n            const stringifiedItem = JSON.stringify(newItem);\r\n            localStorage.setItem(itemName, stringifiedItem);\r\n            setItem(newItem);\r\n          }catch{\r\n            setError(error)\r\n          }\r\n        };\r\n        \r\n        return{\r\n          item,\r\n          saveItem,\r\n          loading,\r\n          error,\r\n        };\r\n    }\r\n\r\nexport {useLocalStorage};","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css';\n\nfunction TodoCounter() { // recibimos la informacion como una propiedad\n\n  const { totalTodos, completedTodos } = React.useContext(TodoContext);\n  return (\n    <section>\n      <h1  className=\"Titulo__Todo\">TODO´S List</h1>\n    <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n    </section>\n  );\n}\n\nexport { TodoCounter }; // con las llaves exportamos de manera \"nombrada\", para exportar y usar el nombre exacto\n","import React from 'react';\nimport {TodoContext} from '../TodoContext/index'\nimport './TodoSearch.css';\n\n\nfunction TodoSearch() {\n\n  const { searchValue, setSearchValue } = React.useContext(TodoContext)\n\n  const onSearchValueChange = (event) => {\n    // console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Buscar...\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React from 'react';\nimport './TodoItem.css';\nimport  {FiCheck} from 'react-icons/fi';\nimport  {FiX} from 'react-icons/fi';\n\nfunction TodoItem(props) {\n\n  // alertas provicionales para ver que si funciona \n  // const onComplete = () => {\n  //   alert('Ya completaste el todo ' + props.text);\n  // };\n  // const onDelete = () => {\n  //   alert('Borraste el todo ' + props.text);\n  // };\n  \n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n      >\n        <FiCheck></FiCheck>\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span\n        className=\"Icon Icon-delete\"\n        onClick={props.onDelete}\n      >\n        <FiX/>\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport './main.css'\r\n\r\nfunction TodoForm(){\r\n    const [newTodoValue, setNewTodoValue] = React.useState('');\r\n\r\n    const {\r\n        addTodo,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n\r\n    const onChange = (event) =>{\r\n        setNewTodoValue(event.target.value);\r\n    };\r\n    const onCancel = () =>{\r\n        setOpenModal(false);\r\n    }\r\n    const onSubmit = (event) =>{\r\n    // .preventDefault(); => nos va a ayudar a que cuadno el forulario se envie no recargara la pagina.\r\n        event.preventDefault();\r\n        addTodo(newTodoValue);\r\n        setOpenModal(false);\r\n    };\r\n\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n            <label>Escribe un nuevo TODO´S...</label>\r\n            <textarea\r\n                value={newTodoValue}\r\n                onChange={onChange}\r\n                placeholder=\"EJ: Hacer la compra...\"\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button\r\n                    type=\"button\"\r\n                    className = \"TodoForm-button TodoForm-button-cancel\"\r\n                    onClick={onCancel}\r\n                >\r\n                    Cancelar\r\n                </button>\r\n                <button\r\n                    className=\"TodoForm-button TodoForm-button-add\"\r\n                    type=\"submit\"\r\n                >\r\n                    Añadir\r\n                </button>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport {TodoForm};","import React from 'react';\nimport './CreateTodoButton.css';\n// import {TodoContext} from '../TodoContext/index'\n\nfunction CreateTodoButton(props) {\n  // const { openModal, setOpenModal } = React.useContext(TodoContext);\n\n  const onClickButton = () => {\n    props.setOpenModal(prevState => !prevState);\n  };\n  \n  return (\n    <button\n      className=\"CreateTodoButton\"\n      // \"on...\" tiene varias posibilidades de eventos\n      onClick={onClickButton} // debemos asiganarle a una funcion, para que se ejecute solo cuando se llamado\n    >\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from 'react'\r\nimport './main.css'\r\n\r\nconst LoadingTodo = () => {\r\n    return (\r\n    <li className=\"TodoItem-loading\">\r\n        <div className=\"LoaderBalls\">\r\n            <span className=\"LoaderBalls__item\"></span>\r\n            <span className=\"LoaderBalls__item\"></span>\r\n            <span className=\"LoaderBalls__item\"></span>\r\n        </div>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport {LoadingTodo}","import React from 'react';\r\nimport './main.css';\r\nimport { DiGithubBadge } from \"react-icons/di\";\r\nimport { FaInstagram } from \"react-icons/fa\";\r\n\r\n\r\nfunction FooterSection(){\r\n    return (\r\n        <footer className=\"footerSection\">\r\n            <h2 className=\"footerSection__title\">Hecho por <a href=\"#\">@Adrían Díaz</a></h2>\r\n            <p> Contact </p>\r\n            <div className=\"links\">\r\n                <a href=\"#\"><DiGithubBadge className=\"badge\" fontSize=\"60\" ></DiGithubBadge></a>\r\n                <a href=\"#\"><FaInstagram className=\"badge\" fontSize=\"60\" /></a>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport {FooterSection};","// import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './modal.css'\r\n\r\nfunction Modal({ children }){\r\n    return ReactDom.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport {Modal};\r\n","import React from 'react'\r\nimport { TodoContext } from '../TodoContext';\r\nimport { TodoCounter } from '../TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch';\r\nimport { TodoList } from '../TodoList';\r\nimport { TodoItem } from '../TodoItem';\r\nimport { TodoForm } from '../TodoForm';\r\nimport { CreateTodoButton } from '../CreateTodoButton';\r\nimport { LoadingTodo } from '../LoadingTodo';\r\nimport { FooterSection } from '../Footer';\r\nimport { Modal } from '../modal';\r\n\r\nfunction AppUI(){\r\n\r\nconst {\r\n  error,\r\n  loading,\r\n  searchedTodos,\r\n  completeTodo,\r\n  deletTodo,\r\n  openModal,\r\n  setOpenModal,\r\n} = React.useContext(TodoContext)\r\n\r\n    return(\r\n//todos nuestros elementos o componentes deben estar dentro de una sola etiqueta\r\n// en este caso usamos una etiqueta que nos proporciona React (React.fragment), que es una etiquieta \"invisible\" para el navegador, pero ayuda a react a hacer sus calculos\r\n    <React.Fragment>\r\n    <TodoCounter/>\r\n    <TodoSearch />\r\n          <TodoList>\r\n            {error && <p>Desespérate, hubo un error...</p>}\r\n            {/* {loading && <p>Estamos cargando, no desesperes...</p>} */}\r\n\r\n            {loading && \r\n            new Array(4).fill(1).map((item, index)=>(\r\n              <LoadingTodo key={index} />\r\n              ))}\r\n\r\n            {(!loading && !searchedTodos.length) && <p>¡Crea tu primer TODO!</p>}\r\n            \r\n            {searchedTodos.map(todo => (\r\n              <TodoItem\r\n                key={todo.text}\r\n                text={todo.text}\r\n                completed={todo.completed}\r\n                onComplete={() => completeTodo(todo.text)}\r\n                onDelete={() => deletTodo(todo.text)}\r\n              />\r\n            ))}\r\n          </TodoList>\r\n\r\n              {openModal && (\r\n                <Modal>\r\n                    <TodoForm>\r\n\r\n                    </TodoForm>\r\n                </Modal>\r\n              )}\r\n\r\n    <CreateTodoButton \r\n      setOpenModal = {setOpenModal}\r\n    />\r\n      <FooterSection/>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { AppUI } ;\r\n","import React from 'react';\nimport {AppUI} from './AppUI';\nimport {TodoProvider} from '../TodoContext/index.js';\n// import './App.css';\n\n// const defaultTodos = [\n//   { text: 'Cortar cebolla', completed: true },\n//   { text: 'Tomar el cursso de intro a React', completed: false },\n//   { text: 'Llorar con la llorona', completed: true },\n//   { text: 'LALALALAA', completed: false },\n// ];\n\n/* CUSOM HOOK */\n\n\n\nfunction App() {\n  \n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index';\nimport './index.css';\n//const e = React.createElement /* podemos usar e como atajo para  React.createElement\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}